name: Build and Deploy Documentation

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup CMake
      uses: lukka/get-cmake@latest
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          graphviz \
          build-essential \
          git \
          wget \
          tar
    
    - name: Install Doxygen 1.12.0
      run: |
        # Download and install specific Doxygen version
        wget https://github.com/doxygen/doxygen/releases/download/Release_1_12_0/doxygen-1.12.0.linux.bin.tar.gz
        tar -xzf doxygen-1.12.0.linux.bin.tar.gz
        sudo cp doxygen-1.12.0/bin/doxygen /usr/local/bin/
        sudo chmod +x /usr/local/bin/doxygen
        
        # Verify installation
        doxygen --version
        
        # Clean up
        rm -rf doxygen-1.12.0*
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Create build directory
      run: mkdir build
    
    - name: Configure CMake
      working-directory: build
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DLIBFETCH_BUILD_DOCS=ON \
          -DLIBFETCH_BUILD_TESTS=OFF \
          -DLIBFETCH_BUILD_EXAMPLES=OFF \
          -DLIBFETCH_ENABLE_TLS=OFF \
          -DLIBFETCH_INSTALL=OFF
    
    - name: Build documentation
      working-directory: build
      run: cmake --build . --target docs
    
    - name: Check if documentation was generated
      run: |
        if [ ! -d "build/docs/html" ]; then
          echo "Documentation directory not found. Checking build output..."
          find build -name "*.html" -o -name "html" -type d
          exit 1
        fi
        echo "Documentation generated successfully"
        ls -la build/docs/html/
    
    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/docs/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4